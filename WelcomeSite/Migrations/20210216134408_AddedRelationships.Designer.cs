// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WelcomeSite.Data;

namespace WelcomeSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210216134408_AddedRelationships")]
    partial class AddedRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WelcomeSite.Respondent", b =>
                {
                    b.Property<Guid>("RespondentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Preferneces")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RespondentCreatedDateTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("RespondentID")
                        .HasName("PK_Respondent_RespondentId");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.ToTable("Respondents");
                });

            modelBuilder.Entity("WelcomeSite.SurveyQuestion", b =>
                {
                    b.Property<Guid>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("QuestionCreatedDateTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("QuestionIsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionID")
                        .HasName("PK_SurveyQuestion_QuestionId");

                    b.ToTable("SurveyQuestions");
                });

            modelBuilder.Entity("WelcomeSite.SurveyResponse", b =>
                {
                    b.Property<Guid>("RespondentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ResponseCreatedDateTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ResponseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResponseText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RespondentID")
                        .HasName("PK_SurveyResponse_ResponseId");

                    b.HasIndex("QuestionID");

                    b.ToTable("SurveyResponses");
                });

            modelBuilder.Entity("WelcomeSite.SurveyResponse", b =>
                {
                    b.HasOne("WelcomeSite.SurveyQuestion", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionID")
                        .HasConstraintName("FK_SurveyResponse_SurveyQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WelcomeSite.Respondent", "Respondent")
                        .WithMany("Responses")
                        .HasForeignKey("RespondentID")
                        .HasConstraintName("FK_SurveyResponse_Respondent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Respondent");
                });

            modelBuilder.Entity("WelcomeSite.Respondent", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("WelcomeSite.SurveyQuestion", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
